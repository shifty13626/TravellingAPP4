mouve front
    /*
    // Back -> 0
    log.writeLine("Value gpio1 (back) : " +gpioBack.readSync());
    if (gpioBack.readSync() === 1)
    {
        log.writeLine("Set gpio1 to value 0");
        gpioBack.writeSync(0);
    }
    // Front -> 1
    log.writeLine("Value gpio0 (front) : " +gpioFront.readSync());
    if (gpioFront.readSync() === 0)
    {
        log.writeLine("Set gpio0 to value 1");
        gpioFront.writeSync(1);
    }
    */

// mouve backÂ²
     // Front -> 0
    log.writeLine("Value gpio0 (front) : " +gpioFront.readSync());
    if (gpioFront.readSync() === 1)
    {
        log.writeLine("Set gpio0 to value 0");
        gpioFront.writeSync(0);
    }
    // Back -> 0
    log.writeLine("Value gpio1 (back) : " +gpioBack.readSync());
    if (gpioBack.readSync() === 1)
    {
        log.writeLine("Set gpio1 to value 0");
        gpioBack.writeSync(0);
    }


    loadGPIO : function(config) {
        log.writeLine("Set GPIO config");
        gpioFront = new Gpio(config.pinFront, 'out');
        gpioBack = new Gpio(config.pinBack, 'out');
    }


    // declaration gpio0/*
    var gpioFront;
var gpioBack;


const gpioFront = new Gpio(17, 'out');
const gpioBack = new Gpio(18, 'out');
*/

const Gpio = require('onoff').Gpio;